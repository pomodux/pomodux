name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.24.4'
  CGO_ENABLED: 0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.24.4, 1.25.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

    - name: Run golangci-lint
      run: golangci-lint run

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Build
      run: |
        go build -v -o bin/pomodux cmd/pomodux/main.go
        ./bin/pomodux --help

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pomodux-linux-amd64
        path: bin/pomodux

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run gosec
      run: gosec ./...

  uat-tests:
    name: UAT Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Build for UAT
      run: |
        go build -v -o bin/pomodux cmd/pomodux/main.go

    - name: Install bats-core
      run: |
        git clone https://github.com/bats-core/bats-core.git /tmp/bats
        sudo /tmp/bats/install.sh /usr/local

    - name: Setup test configuration
      run: |
        mkdir -p ~/.config/pomodux
        cat > ~/.config/pomodux/config.yaml << EOF
        timer:
          default_work_duration: 25m
          default_break_duration: 5m
          default_long_break_duration: 15m
          auto_start_breaks: false
        tui:
          theme: default
          key_bindings:
            pause: p
            resume: r
            start: s
            stop: q
        notifications:
          enabled: true
          sound: false
          message: Timer completed!
        logging:
          level: info
          format: text
          output: file
          log_file: ""
          show_caller: false
        plugins:
          directory: ~/.config/pomodux/plugins
        EOF

    - name: Debug environment
      run: |
        echo "=== Environment Debug ==="
        pwd
        ls -la
        echo "=== Config Directory ==="
        ls -la ~/.config/pomodux/
        echo "=== Config Content ==="
        cat ~/.config/pomodux/config.yaml
        echo "=== Test Binary ==="
        ls -la bin/pomodux
        echo "=== Test Binary Help ==="
        ./bin/pomodux --help
        echo "=== Test Timer Command ==="
        timeout 5s ./bin/pomodux start 2s || echo "Timer command failed with exit code $?"

    - name: Run UAT tests
      run: |
        chmod +x tests/uat/automated/run-tests.sh
        ./tests/uat/automated/run-tests.sh

    - name: Upload UAT test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: uat-test-results
        path: tests/reports/
        retention-days: 30 